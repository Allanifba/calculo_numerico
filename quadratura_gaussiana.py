import numpy as np
from geral import fgeral


def fquadratura_gaussiana():
    while True:
        print('-----------------------------------  DESCRIÇÃO  ------------------------------------')
        print( 'Programa que aplica a Quadratura de Gaussiana a uma função f(x) no intervalo [a,b].' )
        print('-----------------------------------  INSTRUÇÕES  -----------------------------------')
        print( '[1] Algumas funções podem estar no formato np., por exemplo sen(x) = np.sin(x).\n'
              'Para mais informações sobre formato consulte:\n  '
              'https://docs.python.org/pt-br/3/library/math.html?highlight=sin%20x#module-math\n'
              'Repasse todos os comandos vistos no link acima de math.função para np.função.' )

        print('-----------------------------  ENTRE COM OS DADOS  ---------------------------------' )

        F = input('Digite a função f(x): ')
        a = float(eval(input('Digite o extremo inferior do intervalo [a,b]: ')))
        b = float(eval(input('Digite o extremo superior do intervalo [a,b]: ')))
        n = int(eval(input('Digite quantidade de pontos da quadratura (2 a 10): ')))
        f = lambda x: eval(F)
        g = lambda t: ((b-a)/2)*f(((b-a)/2)*t + (b+a)/2)

        if n == 2:
            s1 = 1*g(-0.577350269189626)
            s2 = 1*g(0.577350269189626)
            I_quad = s1+s2

        if n == 3:
            s1 = 0.555555555555556*g(0.774596669241483)
            s2 = 0.555555555555556*g(0.774596669241483)
            s3 = 0.888888888888889*g(0.0000000000)
            I_quad = s1 + s2 + s3

        if n == 4:
            s1 = 0.347854845137454*g( 0.861136311594053)
            s2 = 0.347854845137454*g(-0.861136311594053)
            s3 = 0.652145154862546*g(0.339981043584856)
            s4 = 0.652145154862546*g(-0.339981043584856)
            I_quad = s1 + s2 + s3 + s4

        if n == 5:
            s1 = 0.236926885056189*g(0.906179845938664)
            s2 = 0.236926885056189*g(-0.906179845938664)
            s3 = 0.478628670499366*g(0.538469310105683)
            s4 = 0.478628670499366*g(-0.538469310105683)
            s5 = 0.568888888888889*g(0.000000000000000)
            I_quad = s1 + s2 + s3 + s4 + s5

        if n == 6:
            s1 = 0.171324492379170*g(0.932469514203152)
            s2 = 0.171324492379170*g(-0.932469514203152)
            s3 = 0.360761573048139*g(0.661209386466265)
            s4 = 0.360761573048139*g(-0.661209386466265)
            s5 = 0.467913934572691*g(0.238619186083197)
            s6 = 0.467913934572691*g(-0.238619186083197)
            I_quad = s1 + s2 + s3 + s4 + s5 + s6

        if n == 7:
            s1 = 0.129484966168870*g(0.949107912342759)
            s2 = 0.129484966168870*g(-0.949107912342759)
            s3 = 0.279705391489277*g(0.741531185599395)
            s4 = 0.279705391489277*g(-0.741531185599395)
            s5 = 0.381830050505119*g(0.405845151377397)
            s6 = 0.381830050505119*g(-0.405845151377397)
            s7 = 0.417959183673469*g(0.000000000000000)
            I_quad = s1 + s2 + s3 + s4 + s5 + s6 + s7

        if n == 8:
            s1 = 0.101228536290376*g(0.960289856497536)
            s2 = 0.101228536290376*g(-0.960289856497536)
            s3 = 0.222381034453375*g(0.796666477413627)
            s4 = 0.222381034453375*g(-0.796666477413627)
            s5 = 0.313706645877887*g(0.525532409916329)
            s6 = 0.313706645877887*g(-0.525532409916329)
            s7 = 0.362683783378362*g(0.183434642495650)
            s8 = 0.362683783378362*g(-0.183434642495650)
            I_quad = s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8

        if n == 9:
            s1 = 0.2606106964029354*g(0.6133714327005904)
            s2 = 0.2606106964029354*g(-0.6133714327005904)
            s3 = 0.3123470770400029*g(0.3242534234038089)
            s4 = 0.3123470770400029*g(-0.3242534234038089)
            s5 = 0.0812743883615744*g(0.9681602395076261)
            s6 = 0.0812743883615744*g(-0.9681602395076261)
            s7 = 0.1806481606948574*g(0.8360311073266358)
            s8 = 0.1806481606948574*g(-0.8360311073266358)
            s9 = 0.3302393550012598*g(0.0000000000000000)
            I_quad = s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9

        if n == 10:
            s1  = 0.0666713443086881 * g(0.9739065285171717)
            s2  = 0.0666713443086881 * g(-0.9739065285171717)
            s3  = 0.1494513491505806 * g(0.8650633666889845)
            s4  = 0.1494513491505806 * g(-0.8650633666889845)
            s5  = 0.2190863625159820 * g(0.6794095682990244)
            s6  = 0.2190863625159820 * g(-0.6794095682990244)
            s7  = 0.2692667193099963 * g(0.4333953941292472)
            s8  = 0.2692667193099963 * g(-0.4333953941292472)
            s9  = 0.2955242247147529 * g(0.1488743389816312)
            s10 = 0.2955242247147529 * g(-0.1488743389816312)
            I_quad = s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9 + s10

        print('\n ***********************************  RESPOSTA  ***********************************\n')
        print( '                 A integral de f no intervalo [%d,%d] é %0.9f.                  ' % (a,b,I_quad))
        print('\n **********************************************************************************\n')
        print('             Autoria: Allan de Sousa Soares - IFBA VDC             ')
        print('Canal: https://www.youtube.com/c/MatematicaParaGenteGrande\n')
        esc = input('Digite menu para voltar ao menu princial ou aperte enter para continuar: ')
        if esc == 'menu':
            fgeral()



